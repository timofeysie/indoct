package com.businessglue.struts;

import javax.servlet.http.*;
import javax.servlet.ServletConfig;
import javax.servlet.ServletContext;
import javax.servlet.http.HttpSession;
import org.apache.struts.action.*;

import org.catechis.file.FileCategories;
import org.catechis.I18NWebUtility;
import com.businessglue.struts.AddCategoryForm;

import java.util.Date;
import java.util.Vector;
import java.util.Hashtable;

/**
*<p>Usually, an action gets called like this: name.do > NameAction > name.jsp, but his action
* is called in reverse, ie name.jsp > NameAction > categories_simple.jsp.
*/
public class AddCategoryAction extends Action
{
	
	
	public ActionForward perform(ActionMapping mapping, ActionForm form, HttpServletRequest request, HttpServletResponse response)
	{
		HttpSession session = request.getSession();
		ServletContext context = getServlet().getServletContext();
		String user_name = (String)session.getAttribute("user_name");
		String user_id   = (String)session.getAttribute("user_id");
		context.log("AddCategoryAction.perform: user_name "+user_name);
		context.log("AddCategoryAction.perform: user_id   "+user_id);
		String context_path = context.getRealPath("/WEB-INF/");
		String encoding = new String("UTF-8");
		AddCategoryForm f = (AddCategoryForm) form;
		String category = f.getCategory();
		FileCategories cats = new FileCategories();
		context.log("AddCategoryAction.perform: recieved a request to create "+category);
		cats.addCategory(category, context_path, user_name);
		Hashtable categories = (Hashtable)session.getAttribute("categories");
		String now = Long.toString(new Date().getTime());
		categories.put(now, category+".xml");
		session.setAttribute("categories", categories);
		I18NWebUtility.setContentTypeAndLocale(request, response);
		return (mapping.findForward("categories_simple"));
	}
	
	private void printLog(Vector log, ServletContext context)
	{
		int total = log.size();
		int i = 0;
		while (i<total)
		{
			context.log("AddCategoryAction.log "+(String)log.get(i));
			i++;
		}
	}

}
